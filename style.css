@charset "utf-8";
@import url('https://fonts.googleapis.com/css2?family=Oregano&family=Quicksand&family=Ribeye+Marrow&family=Satisfy&display=swap');
*{margin: 0px; padding: 0px; box-sizing: border-box; font-family: "quicksand";}
ul,ol,li{
    list-style: none;
}
a{
    text-decoration: none;
}

section{
    width: 100%;
    /* 섹션이 브라우저 전체의 너비를 가지도록 하겠다는 코드입니다 */
    padding: 180px 0 150px;
    /* 섹션의 공간에 패딩을 부여하는데 
    padding-top 180, 좌우 패딩은 없구요
    padding-botom 150을 주겠다는 뜻입니다 */
}
section .inner{
    width: 1180px;
    /* 12컬럼 그리드를 사용하기 위해서 1180px로 합니다 */
    margin: 0 auto;
    /* inner를 가운데 배치하도록 하는 코드입니다
    바깥여백 중 위아래는 주지 않고, 좌우로는 가운데 배치될 수 있도록 auto를 부여합니다 */
}
section .inner h1{
    font: bold 24px/1 'arial';
    /* 폰트웨이트 굵게, 폰트크기는 24px, 폰트높이는 1, 폰트 패밀리는 아리알 */
    color: #555;
    /* 폰트 컬러는 #555 */
    margin-bottom: 50px;
    /* h1과 wrap의 바깥 간격을 50px 부여합니다 */
    text-align: center;
    /* 글자를 가운데 정렬합니다 */
}
/* 플롯 해제하기 */
/* wrap의 자식요소인 article을 float하면서 부모인 wrap이 자식요소들의 높이를 인식하지 못하게 되었습니다
따라서 높이를 인식할 수 있게 float을 해제하는 문구입니다 */
/* ::after를 무조건 부모요소 뒤에 써야됨 */
section .inner .wrap::after{
    content: '';
    display: block;
    clear: both;
}
section .inner .wrap article{
    width: 280px;
    /* 12컬럼 그리드에서 4단은 280이기 때문에  */
    height: 200px;
    float: left;
    /* 블록 요소를 좌우 배치하기 위해서 */
    margin-right: 20px;
    /* 각각의 블록요소 간격을 준 것 */
    position: relative;

    /* article 영역을 벗어나는 컨텐츨를 잘라서
    다른 영역에 침범하지 않도록 합니 */
    overflow: hidden;
}
/* 280에 모두 공통적으로 20px의 마진 오른쪽을 줬기 때문에
1200px이 되면서 inner의 1180을 넘기게 되어 레이아웃이 깨짐
그래서 마지막 아티클 요소의 마진 오른쪽을 없앰(1180px로 맞춤) */
section .inner .wrap article:last-of-type{
    margin-right: 0px;
}
/* 이미지를 아티클 안에 꽉 채워서 넣기 위해서 쓰는 3종 세트 코드
외우세요 ㅉ */
section .inner .wrap article img{
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* 호버이벤트시 커지는 효과에 트랜지션을 넣어줍) */
    transition: all 1s;
}
/* article에 호버시 img를 1.2배 키웁니다 */
section .inner .wrap article:hover img{
    transform: scale(1.2);
}
section .inner .wrap article p{
    font: 20px/1 'arial';
    color: #fff;
    position: absolute;
    z-index: 3;
}

section .inner .wrap article::after{
    /* 가상선택자를 사용하면 써야함 */
    content: '';
    /* 가상선택자의 너비, 높이를 지정해주기 위해서 부여함 */
    display: block;
    background-color: rgba(82, 140, 73, 0.8);
    /* article과 같은 너비, 높이를 가상선택자 마스크를 만듦 */
    width: 100%;
    height: 100%;

    /* after로 잡은 가상선택자 마스크를 겹치기 위해 밑에 3가지 코드 작성 */
    position: absolute;
    top: 0;
    left: 0;
    
    /* 호버시에 마스크가 이동하는데 트랜지션을 걸어줌 */
    transition: all 0.5s;
}
section .inner .wrap article p{
    font: 20px/1 'arial';
    color: #fff;
    position: absolute;
    z-index: 3;
    opacity: 0;
    transition: 0.5s;
}

section .inner .wrap article:hover p{
    opacity: 1;
}
/* 첫번째 아티클의 애프터를 선택 */
section .inner .wrap article:nth-of-type(1)::after{
    top: 0; 
    left: 280px;
}
/* 첫번째 아티클에 호버할때 그때의 애프터 */
section .inner .wrap article:nth-of-type(1):hover:after{
    top: 0px; left: -230px;
    /* left:0이면 아티클 위에 있구요, 음수를 줘야 왼쪽으로 가기 때문에 기존 280양수를 준 상태에서 -230을 주었습니 */
}
section .inner .wrap article:nth-of-type(1) p{
    /* p태그 전체에 포지션을 부여하였기에 좌표 설정이 가능함 */
    top: 45%; left: -5%;
    transform: rotate(90deg);
}
section .inner .wrap article:nth-of-type(2)::after{
    top: -280px; 
    left: 0px;
}
section .inner .wrap article:nth-of-type(2):hover:after{
    top: 150px; left: 0px;
}
section .inner .wrap article:nth-of-type(2) p{
    bottom: 7%; left: 35%;
    transform: rotate(0deg);
}
section .inner .wrap article:nth-of-type(3)::after{
    top: 280px; 
    left: 0px;
}
section .inner .wrap article:nth-of-type(3):hover:after{
    top: -150px; left: 0px;
}
section .inner .wrap article:nth-of-type(3) p{
    top: 7%; left: 35%;
    transform: rotate(0deg);
}
section .inner .wrap article:nth-of-type(4)::after{
    top: 0; 
    left: -280px;
}
section .inner .wrap article:nth-of-type(4):hover:after{
    top: 0px; left: 230px;
}
section .inner .wrap article:nth-of-type(4) p{
    top: 45%; right: -5%;
    transform: rotate(-90deg);
}
